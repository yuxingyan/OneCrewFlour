package cn.com.action;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.annotation.Resource;

import org.apache.struts2.ServletActionContext;
import org.springframework.stereotype.Controller;

import com.opensymphony.xwork2.ActionSupport;

import cn.com.biz.BuyBiz;
import cn.com.biz.ChangeBiz;
import cn.com.biz.CheckflourstoreBiz;
import cn.com.biz.ClientBiz;
import cn.com.biz.ClientstoreBiz;
import cn.com.biz.ExchangeBiz;
import cn.com.biz.FlourstoreBiz;
import cn.com.pojo.Buy;
import cn.com.pojo.Change;
import cn.com.pojo.Checkstore;
import cn.com.pojo.Clientstore;
import cn.com.pojo.Exchange;
import cn.com.pojo.Flourstore;
@Controller("buyAction")

public class BuyAction extends ActionSupport {
	@Resource(name="checkflourstoreDao")
	private CheckflourstoreBiz checkflourstoreBiz;
	@Resource(name="clientDao")
	private ClientBiz clientBiz;
	@Resource(name="changeDao")
	private ChangeBiz changeBiz;
	@Resource(name="flourstore")
	private Flourstore flourstore;
	@Resource(name="flourstoreDao")
	private FlourstoreBiz flourstoreBiz;
	@Resource(name="buy")
	private Buy buy;
	@Resource(name="buyDao")
	private BuyBiz buyBiz;
	@Resource(name="exchangeDao")
	private ExchangeBiz exchangeBiz;
	@Resource(name="clientstoreDao")
	private ClientstoreBiz clientstoreBiz;
	public String init(){
		String result="error";
		int count=exchangeBiz.findcount();
		
		ServletActionContext.getRequest().getSession().setAttribute("count", count);
		result="initsuccess";
		
		
		return result;
		
	}
	public String addbuy() throws ParseException{
		String result="error";
	Change change=new Change();
		
		
		
		String s2=ServletActionContext.getRequest().getParameter("buy.date");
		DateFormat format1 = new SimpleDateFormat("yyyy-MM-dd"); 
		Date date = format1.parse(s2);
		
		  String s1=ServletActionContext.getRequest().getParameter("bian");
	        int clientid=Integer.parseInt(s1);
	        int userid=1;
	        String s3=ServletActionContext.getRequest().getParameter("pay");
			
			Float pay=Float.valueOf(s3).floatValue();
			String s4=ServletActionContext.getRequest().getParameter("realpay");
				
			Float realpay=Float.valueOf(s4).floatValue();
			
	      buy.setDate(date);
	    	buy.setType("Ð¡Âó");
		 Clientstore clientstore= clientstoreBiz.findByIdType(clientid, buy.getType());
	       if(clientstore.getWeight()>buy.getWeight()){
	    	   change.setClientid(clientid);
	    	   change.setChangetype("Ô­Á¸¹ºÖÃ");
	    	   change.setDate(date);
	    	   change.setClientname(clientBiz.findById(clientid).getClientname());
	    	   change.setClientcard(clientBiz.findById(clientid).getIdcard());
	    	   change.setClientaddress(clientBiz.findById(clientid).getAddress());
	    	   change.setEid(buy.getEid());
	    	   change.setPay1(pay);
	    	   change.setRealpay1(realpay);
	    	   if(pay>realpay){
	    		   change.setPay(pay-realpay);
	    		   change.setFlag(2);
	    		   changeBiz.addchange(change);
	    	   }
	    	   if(pay<realpay){
	    		   change.setPay(realpay-pay);
	    		   change.setFlag(1);
	    		   
	    		   changeBiz.addchange(change);
	    	   }
	    	  
		      buyBiz.addbuy(buy);
		      
		  	Exchange exchange2=exchangeBiz.addexchange(buy.getEid(), "¹ºÖÃÔ­Á¸", clientid, buy.getDate(), pay, true, realpay, userid);
		      clientstoreBiz.updateclientstore(clientid, buy.getType(), clientstore.getWeight()-buy.getWeight());
		      Flourstore flourstore2=flourstoreBiz.findByType(buy.getType());
		      if(flourstore2!=null){
		    	  flourstoreBiz.updateflourstore(buy.getType(), flourstore2.getMillweight()+buy.getWeight());
		    	  Checkstore checkstore=checkflourstoreBiz.findByName("Ð¡Âó");
					
					 
				   checkstore.setSumstore(checkstore.getSumstore());
					checkstore.setClientstore(checkstore.getClientstore()-buy.getWeight());
					
					checkflourstoreBiz.updatecheckflouestore(checkstore);
		    	  
		      }
		      else{
		    	  flourstoreBiz.addflourstore(buy.getType(), buy.getWeight());
		    	  Checkstore checkstore=checkflourstoreBiz.findByName("Ð¡Âó");
					
					 
				   checkstore.setSumstore(checkstore.getSumstore());
					checkstore.setClientstore(checkstore.getClientstore()-buy.getWeight());
					
					checkflourstoreBiz.updatecheckflouestore(checkstore);
		      }
		      
		      
		      result="addbuysuccess";
	       }else{
	    	   result="addbuyerror";
	       }
      
      
       
		
		
		
		
		return result;
		
	}
	public Buy getBuy() {
		return buy;
	}
	public void setBuy(Buy buy) {
		this.buy = buy;
	}

}
